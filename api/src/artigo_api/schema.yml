openapi: 3.0.3
info:
  title: ARTigo
  version: 1.0.0
  description: Social Image Tagging
  contact:
    email: feedback@artigo.org
  license:
    name: GNU General Public License v3.0
    url: https://github.com/arthist-lmu/artigo/blob/master/LICENSE.md
paths:
  /api-token-auth/:
    post:
      operationId: api_token_auth_create
      tags:
      - api-token-auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /auth/login/:
    post:
      operationId: auth_login_create
      description: Login user.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /auth/logout/:
    post:
      operationId: auth_logout_create
      description: Logout user.
      tags:
      - auth
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/registration/:
    post:
      operationId: auth_registration_create
      description: Register user.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /game/:
    get:
      operationId: game_retrieve
      description: Create games. The first valid game round is automatically returned
        when a new game is created. All further rounds can be obtained by passing
        the respective `session_id`.
      parameters:
      - in: query
        name: opponent_type
        schema:
          type: string
          enum:
          - mean_gameround_opponent
          - random_gameround_opponent
        description: Type of each opponent. Opponents are invalid for infinite game
          rounds (`round_duration=0`).
      - in: query
        name: resource_type
        schema:
          type: string
          enum:
          - random_resource
        description: Type of each resource
      - in: query
        name: round_duration
        schema:
          type: integer
          minimum: 0
          maximum: 3600
          default: 60
        description: Duration of each gameround (in seconds). For infinite game rounds,
          `0` should be passed.
      - in: query
        name: rounds
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 5
        description: Number of gamerounds
      - in: query
        name: score_types
        schema:
          type: array
          items:
            type: string
            enum:
            - annotation_validated_score
            - opponent_validated_score
        description: Score types
      - in: query
        name: suggester_types
        schema:
          type: array
          items:
            type: string
            enum:
            - cooccurrence_suggester
        description: Suggester types
      - in: query
        name: taboo_type
        schema:
          type: string
          enum:
          - most_annotated_taboo
        description: Type of taboo annotations
      tags:
      - game
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: game_create
      tags:
      - game
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /resource/:
    get:
      operationId: resource_retrieve
      description: Retrieve metadata and crowd-generated tags of a resource.
      parameters:
      - in: query
        name: id
        schema:
          type: string
        description: Resource identifier
        required: true
      tags:
      - resource
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Resource identifier
                    type: string
                  meta:
                    description: Metadata
                    type: array
                    items:
                      properties:
                        name:
                          description: Name of field
                          type: string
                          enum:
                          - titles
                          - creators
                          - location
                          - institution
                        value_str:
                          description: String value of field
                          type: string
                  tags:
                    description: Crowd-generated tags
                    type: array
                    items:
                      properties:
                        id:
                          description: Tag identifier
                          type: string
                        name:
                          description: Name of tag
                          type: string
                        language:
                          description: Language of tag
                          type: string
                        count:
                          description: Number of taggings
                          type: integer
                  path:
                    description: File path to resource image
                    type: string
                  source:
                    description: Source information
                    type: object
                    properties:
                      id:
                        description: Source identifier
                        type: string
                      name:
                        description: Name of source
                        type: string
                      url:
                        description: URL of source
                        type: string
                      is_public:
                        description: Publicly visible?
                        type: boolean
          description: ''
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /search/:
    post:
      operationId: search_create
      description: Search metadata and crowd-generated tags of resources. For longer
        lasting queries a `job_id` is returned, which can be used in subsequent queries
        to receive status updates.
      parameters:
      - in: query
        name: aggregate
        schema:
          type: object
          properties:
            fields:
              description: Metadata fields that should be aggregated
              type: array
            size:
              description: Maximum number of aggregation results
              type: integer
              default: 250
        description: Aggregation options
      - in: query
        name: job_id
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
          minimum: 0
          maximum: 10000
          default: 100
        description: Maximum number of search results
      - in: query
        name: offset
        schema:
          type: integer
          minimum: 0
          maximum: 10000
          default: 0
        description: Number of search results to skip
      - in: query
        name: query
        schema:
          type: array
          items:
            properties:
              name:
                description: Name of field
                type: string
                enum:
                - titles
                - creators
                - location
                - institution
                - source
                - tags
                - all-text
              value:
                description: Value of field
                type: string
              flag:
                type: string
                enum:
                - should
                - must
                - not
      - in: query
        name: random
        schema:
          type: string
        description: Random seed
      tags:
      - search
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  offset:
                    type: integer
                  entries:
                    type: array
                    items:
                      properties:
                        id:
                          type: string
                        meta:
                          type: array
                          items:
                            properties:
                              name:
                                type: string
                              value_str:
                                type: string
                        tags:
                          type: array
                          items:
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                              language:
                                type: string
                              count:
                                type: integer
                        path:
                          type: string
                        source:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            url:
                              type: string
                            is_public:
                              type: boolean
                  aggregations:
                    type: array
                    items:
                      properties:
                        field:
                          type: string
                        entries:
                          type: array
                          items:
                            properties:
                              name:
                                type: string
                              count:
                                type: integer
          description: ''
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 256
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - password1
      - password2
      - username
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
